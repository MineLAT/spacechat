plugins {
    id 'java'
    id 'idea'
    id 'com.gradleup.shadow' version '8.3.5'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.gradleup.shadow'

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    repositories {
        // bstats, caffeine, adventure, mysql-driver, hikaricp, jedis, configurate
        mavenCentral()
        // rtag
        maven { url 'https://jitpack.io' }
        // spigot
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/central' }
        // localelib
        maven { url 'https://repo.codemc.io/repository/maven-public/' }
        // viaversion
        maven { url 'https://repo.viaversion.com' }
        // protocollib
        maven { url 'https://repo.dmulloy2.net/repository/public/' }
        // essentials
        maven { url 'https://repo.essentialsx.net/releases/' }
        // triumph-msg
        maven { url 'https://repo.triumphteam.dev/snapshots/' }
        // acf
        maven { url 'https://repo.aikar.co/content/groups/aikar/' }
        // placeholderapi
        maven {
            url 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
            content {
                includeGroup 'me.clip'
            }
        }
    }

    dependencies {
        // Compile
        compileOnly('me.clip:placeholderapi:2.11.6') { transitive = false }
        compileOnly('net.essentialsx:EssentialsX:2.21.0') { transitive = false }

        //compileOnly 'com.google.code.gson:gson:2.8.0'
        //compileOnly 'com.google.guava:guava:21.0'
        compileOnly 'org.jetbrains:annotations:26.0.2'


        // Library loader
        implementation 'com.saicone.ezlib:loader:1.3.1'
        compileOnly 'com.saicone.ezlib:annotations:1.3.1'

        // Protocol
        compileOnly 'com.viaversion:viaversion-api:5.3.2'
        compileOnly 'io.netty:netty-all:4.0.20.Final'
        compileOnly 'com.comphenix.protocol:ProtocolLib:5.3.0'

        // Implementations
        compileOnly 'org.bstats:bstats-bukkit:3.1.0'

        compileOnly 'com.github.ben-manes.caffeine:caffeine:3.2.0'

        compileOnly 'co.aikar:acf-bukkit:0.5.1-SNAPSHOT'

        // Only used with reflection
        //compileOnly 'com.mysql:mysql-connector-j:9.2.0'
        compileOnly 'redis.clients:jedis:5.2.0'
        compileOnly 'com.zaxxer:HikariCP:6.2.1'

        compileOnly 'org.spongepowered:configurate-gson:4.2.0'
        compileOnly 'me.pikamug.localelib:LocaleLib:4.1.1'
        compileOnly 'commons-lang:commons-lang:2.6'

        compileOnly 'com.saicone.rtag:rtag:1.5.10'
        compileOnly 'com.saicone.rtag:rtag-item:1.5.10'

        compileOnly('com.github.cryptomorin:XSeries:13.2.0') { transitive = false }
    }

    compileJava {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    jar {
        dependsOn (shadowJar)
    }

    shadowJar {
        manifest {
            attributes 'Paperweight-Mappings-Namespace': 'mojang'
        }
        archiveClassifier.set('')

        relocate 'com.saicone.ezlib', project.group + '.lib.ezlib'
        relocate 'org.bstats', project.group + '.lib.bstats'
        relocate 'com.github.benmanes.caffeine.cache', project.group + '.lib.caffeine'
        relocate 'co.aikar.commands', project.group + '.lib.acf.commands'
        relocate 'co.aikar.locales', project.group + '.lib.acf.locales'
        relocate 'com.mysql', project.group + '.lib.mysql'
        relocate 'redis.clients.jedis', project.group + '.lib.jedis'
        relocate 'com.zaxxer.hikari', project.group + '.lib.hikari'
        relocate 'org.spongepowered.configurate', project.group + '.lib.configurate'
        relocate 'me.pikamug.localelib', project.group + '.lib.localelib'
        relocate 'com.saicone.rtag', project.group + '.lib.rtag'
        relocate 'com.cryptomorin.xseries', project.group + '.lib.xseries'
    }
}

subprojects {
    dependencies {
        implementation rootProject
    }

    shadowJar {
        archiveBaseName.set(rootProject.name + '-' + project.name)
        destinationDirectory.set(file(rootProject.layout.buildDirectory.dir('libs')))
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand(project.properties)
    }
}

dependencies {
    // Compile
    compileOnly 'org.spigotmc:spigot-api:1.21.5-R0.1-SNAPSHOT'

    // Library loader
    annotationProcessor 'com.saicone.ezlib:annotations:1.3.1'

    // Implementations
    compileOnly 'net.kyori:adventure-api:4.21.0'
    compileOnly 'net.kyori:adventure-platform-bukkit:4.3.4'
    compileOnly 'net.kyori:adventure-text-minimessage:4.21.0'
    compileOnly 'net.kyori:adventure-text-serializer-legacy:4.21.0'
}

shadowJar {
    shadowJar {
        archiveBaseName.set(rootProject.name + '-bukkit')
    }

    relocate 'load.adventure', 'true'
    relocate 'net.kyori.adventure', project.group + '.lib.adventure'
    relocate 'net.kyori.examination', project.group + '.lib.examination'
    relocate 'net.kyori.option', project.group + '.lib.option'
}